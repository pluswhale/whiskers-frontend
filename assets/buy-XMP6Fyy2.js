import{d,u as $,a as G,b as J,j as s,T as p,B as r,Y as a,c as n,e as se,J as te,g as q,N as Q,f as oe,h as ne,i as re,r as ae,L as ie,H as ce,C as z,k as F,l as le,m as de,n as _e}from"./index-CfWrBdeE.js";import{B as Z,T as ue,a as pe,A as be,d as S,s as K,g as fe}from"./AirdropHelper-Dx-HG9Ho.js";const ge="_buy__wrapper_1kl9d_1",ye="_buy__back_1kl9d_10",he="_buy__back_icon_1kl9d_19",me="_buy__container_1kl9d_23",xe="_buy__title_and_logo_1kl9d_30",Ce="_buy__title_1kl9d_30",Ae="_buy__heading_1kl9d_39",ke="_buy__buy_rows_1kl9d_47",we="_buy__balance_1kl9d_52",Se="_buy__balance_value_1kl9d_61",ve="_buy__footer_connect_1kl9d_67",Be="_buy__footer_connect_container_1kl9d_78",Te="_buy__footer_connect_score_1kl9d_85",je="_buy__footer_connect_tokens_1kl9d_91",Oe="_buy__footer_connect_wallet_1kl9d_96",i={buy__wrapper:ge,buy__back:ye,buy__back_icon:he,buy__container:me,buy__title_and_logo:xe,buy__title:Ce,buy__heading:Ae,buy__buy_rows:ke,buy__balance:we,buy__balance_value:Se,buy__footer_connect:ve,buy__footer_connect_container:Be,buy__footer_connect_score:Te,buy__footer_connect_tokens:je,buy__footer_connect_wallet:Oe},Y=[{id:1,countSpins:100,countWhisks:3600},{id:2,countSpins:250,countWhisks:8900},{id:3,countSpins:500,countWhisks:17700},{id:4,countSpins:1e3,countWhisks:35200}],L={hex:"b5ee9c72410107010089000114ff00f4a413f4bcf2c80b01020120040201bcf26c21018209312d00bef2e2c0ed44d0d20001f2d2be88ed54fa40d3ffd3ff3003d33fd43020f9005003baf2e2c1f800820898968070fb02821043c7d5c9c8cb1fcb3fcc12cbffc9718010c8cb055003cf1670fa0212cb6accc98306fb00030001c002014806050011a098d7da89a1ae14010002d0f6f532a9"},Ie="_buy_row__wrapper_en39z_1",Ne="_buy_row__container_en39z_8",He="_buy_row__spins_en39z_13",We="_buy_row__whisks_en39z_18",O={buy_row__wrapper:Ie,buy_row__container:Ne,buy_row__spins:He,buy_row__whisks:We};function Pe(f){return d.beginCell().storeCoins(0).storeAddress(f.admin).storeRef(f.content).storeRef(f.walletCode).endCell()}class I{constructor(t,e){this.address=t,this.init=e}static createFromAddress(t){return new I(t)}static createFromConfig(t,e,_=0){const b=Pe(t),l={code:e,data:b};return new I(d.contractAddress(_,l),l)}async sendDeploy(t,e,_){await t.internal(e,{value:_,sendMode:d.SendMode.PAY_GAS_SEPARATELY,body:d.beginCell().endCell()})}async sendMint(t,e,_,b,l,x){await t.internal(e,{sendMode:d.SendMode.PAY_GAS_SEPARATELY,body:d.beginCell().storeUint(21,32).storeUint(0,64).storeAddress(l).storeCoins(b).storeRef(d.beginCell().storeUint(395134233,32).storeUint(0,64).storeCoins(x).storeAddress(this.address).storeAddress(this.address).storeCoins(0).storeUint(0,1).endCell()).endCell(),value:_+b})}async getWalletAddressOf(t,e){return(await t.get("get_wallet_address",[{type:"slice",cell:d.beginCell().storeAddress(e).endCell()}])).stack.readAddress()}async getWalletCode(t){const e=(await t.get("get_jetton_data",[])).stack;return e.skip(4),e.readCell()}}const Me=f=>{const t=$({query:"(max-width: 600px)"}),{updateBonusSpins:e}=G(),[_]=J(),b=_.connected,{id:l,countSpin:x,countWhisk:g,userId:v,userTonAddress:y,jettonBalance:N}=f,B=async A=>{if(!y)r.error("Please connect TON wallet!",{position:"bottom-left",autoClose:3e3,hideProgressBar:!1,closeOnClick:!0,pauseOnHover:!0,draggable:!0,progress:void 0,theme:"dark",transition:a});else if(!b)r.error("Please connect TON Wallet!",{position:"bottom-left",autoClose:3e3,hideProgressBar:!1,closeOnClick:!0,pauseOnHover:!0,draggable:!0,progress:void 0,theme:"dark",transition:a});else if(N<g)r.error("Insufficient WHISK balance. Buy on STONfi.",{position:"bottom-left",autoClose:3e3,hideProgressBar:!1,closeOnClick:!0,pauseOnHover:!0,draggable:!0,progress:void 0,theme:"dark",transition:a});else if(v&&y){const H=n.toNano(g),T=n.Address.parse(se),j=n.Address.parse(y),W=n.beginCell().endCell(),P=n.toNano("0.01"),c=n.beginCell().endCell(),h=te.transferMessage(H,T,j,W,P,c),u=await q({network:Q}),k=new n.TonClient({endpoint:u}),M=new I(n.Address.parse(oe)),w=await k.open(M).getWalletAddressOf(n.Address.parse(y)),C=n.toNano("0.05");try{await _.sendTransaction({messages:[{address:w.toString(),amount:C.toString(),payload:h==null?void 0:h.toBoc().toString("base64")}],validUntil:Date.now()+5*60*1e3});const o=await ne(v,{countSpins:A});(o==null?void 0:o.status)===200?(e(A),r.success(`You bought ${A} spins`,{position:"bottom-left",autoClose:3e3,hideProgressBar:!1,closeOnClick:!0,pauseOnHover:!0,draggable:!0,progress:void 0,theme:"dark",transition:a})):r.error("Can't buy spins.",{position:"bottom-left",autoClose:3e3,hideProgressBar:!1,closeOnClick:!0,pauseOnHover:!0,draggable:!0,progress:void 0,theme:"dark",transition:a})}catch{r.error("User reject transaction",{position:"bottom-left",autoClose:3e3,hideProgressBar:!1,closeOnClick:!0,pauseOnHover:!0,draggable:!0,progress:void 0,theme:"dark",transition:a})}}};return s.jsx("div",{className:O.buy_row__wrapper,children:s.jsxs("div",{className:O.buy_row__container,children:[s.jsxs("div",{className:O.buy_row__spins,children:[s.jsx(p,{fontSize:t?"26px":"50px",fontFamily:"Roundy Rainbows, sans-serif",children:x}),s.jsx(p,{fontSize:t?"16px":"24px",fontFamily:"Montserrat, sans-serif",children:"spins"})]}),s.jsxs("div",{className:O.buy_row__whisks,children:[s.jsx(p,{fontSize:t?"16px":"28px",fontFamily:"Montserrat, sans-serif",children:BigInt(g).toLocaleString()}),s.jsx(p,{fontSize:t?"16px":"26px",fontFamily:"Montserrat, sans-serif",children:"WHISK"})]}),s.jsx(Z,{onClick:()=>B(x),fontFamily:"Montserrat, sans-serif",height:t?"28px":"52px",fontSize:t?"14px":"28px",boxShadow:"0px 2px 2px rgba(0, 0, 0, 0.1), inset 0px 1px 1px rgb(255 161 161 / 60%), inset 0px -3px 2px rgba(0, 0, 0, 0.2)",text:"Buy now",fontWeight:"normal",width:"fit-content",textTransform:"none",borderRadius:"24px"})]})},l)},Re="/whiskers/assets/back-arrow-BYp4F-0z.png",Ue=()=>{const f=re(),t=$({query:"(max-width: 600px)"}),{userData:e,jettonBalance:_,isClaimable:b,airdropList:l,airdropCell:x,campaignNumber:g,updateClaimedWhisks:v}=G(),[y]=J(),[N,B]=ae.useState(!0),A=y.connected,H=()=>{f(-1)},T=l.findIndex(c=>n.Address.parse(c.userTonAddress).toString()==n.Address.parse((e==null?void 0:e.userTonAddress)||"UQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJKZ").toString());let j=0;T!=-1&&(j=l[T].unclaimedWhisks);async function W(c,h){let u=!1,k=25;for(;!u&&k>0;){if(k--,u=await h.isContractDeployed(c),u)return;await K(3e3)}throw new Error("Timeout")}const P=async()=>{if(b!=1)r.error("No snapshot yet. Claim after 7:00 GMT",{position:"bottom-left",autoClose:3e3,hideProgressBar:!1,closeOnClick:!0,pauseOnHover:!0,draggable:!0,progress:void 0,theme:"dark",transition:a});else if(!A)r.error("Connect your TON Wallet and try again",{position:"bottom-left",autoClose:3e3,hideProgressBar:!1,closeOnClick:!0,pauseOnHover:!0,draggable:!0,progress:void 0,theme:"dark",transition:a});else if(e!=null&&e.userId&&(e!=null&&e.userTonAddress)&&g){const c=l.findIndex(o=>o.userId.toString()==(e==null?void 0:e.userId.toString()));if(c!=-1&&l[c].userTonAddress.toString()!=(e==null?void 0:e.userTonAddress.toString())){r.error("Please connect with previous wallet to claim or wait until next snapshot at 7:00 GMT",{position:"bottom-left",autoClose:3e3,hideProgressBar:!1,closeOnClick:!0,pauseOnHover:!0,draggable:!0,progress:void 0,theme:"dark",transition:a});return}const h=await q({network:Q}),u=new n.TonClient({endpoint:h}),M=d.Cell.fromBase64(x||"").beginParse().loadDictDirect(d.Dictionary.Keys.BigUint(256),pe),R=l.findIndex(o=>n.Address.parse(o.userTonAddress).toString()==n.Address.parse(e==null?void 0:e.userTonAddress.toString()).toString());if(R==-1){r.error("Not in the airdrop list. Please wait for the next snapshot!",{position:"bottom-left",autoClose:3e3,hideProgressBar:!1,closeOnClick:!0,pauseOnHover:!0,draggable:!0,progress:void 0,theme:"dark",transition:a});return}const w=BigInt(R.toString()),C=M.generateMerkleProof(w);if(!u)r.error("Cannot claim WHISK. Try again",{position:"bottom-left",autoClose:3e3,hideProgressBar:!1,closeOnClick:!0,pauseOnHover:!0,draggable:!0,progress:void 0,theme:"dark",transition:a});else{const o=u.open(be.createFromConfig({campaign_number:BigInt(g),airdrop:n.Address.parse(z),index:w,proofHash:C.hash()},d.Cell.fromBoc(F.from(L.hex,"hex"))[0]));if(await o.getClaimed()){r.error("Already claimed! Please wait for the next snapshot",{position:"bottom-left",autoClose:3e3,hideProgressBar:!1,closeOnClick:!0,pauseOnHover:!0,draggable:!0,progress:void 0,theme:"dark",transition:a});return}if(!await u.isContractDeployed(o.address)){const V=new S.StateInit({code:S.Cell.fromBoc(F.from(L.hex,"hex"))[0],data:S.beginCell().storeBit(!1).storeAddress(S.Address.parse(z)).storeBuffer(C.hash()).storeUint(w,256).storeUint(BigInt(g),16).endCell()}),U=new S.Cell;V.writeTo(U);try{const E=await y.sendTransaction({messages:[{address:o.address.toString(),amount:d.toNano("0.1").toString(),stateInit:U.toBoc().toString("base64")}],validUntil:Date.now()+3e5});await W(o.address,u),await K(1500),await o.sendClaim(123n,C);try{const m=E.boc,X=await fe(n.Address.parse(e==null?void 0:e.userTonAddress),m),D=`${le}${X}`,ee=(await de.get(D)).data.children[0].transaction.success;console.log("txStatus: ",ee)}catch(m){console.log(m)}try{const m=await _e(e.userId);m&&(v(),m.message=="successfully claimed whisks"&&(r.success(`You claimed ${j} $WHISK`,{position:"bottom-left",autoClose:3e3,hideProgressBar:!1,closeOnClick:!0,pauseOnHover:!0,draggable:!0,progress:void 0,theme:"dark",transition:a}),B(!1),setTimeout(()=>{B(!0)},3e5)))}catch{r.error("Cannot claim WHISK. Try again",{position:"bottom-left",autoClose:3e3,hideProgressBar:!1,closeOnClick:!0,pauseOnHover:!0,draggable:!0,progress:void 0,theme:"dark",transition:a})}}catch{r.error("User reject transaction",{position:"bottom-left",autoClose:3e3,hideProgressBar:!1,closeOnClick:!0,pauseOnHover:!0,draggable:!0,progress:void 0,theme:"dark",transition:a});return}}await u.isContractDeployed(o.address)&&(await o.getClaimed()||await o.sendClaim(123n,C))}}else r.error("Unknown error. Please try again later!",{position:"bottom-left",autoClose:3e3,hideProgressBar:!1,closeOnClick:!0,pauseOnHover:!0,draggable:!0,progress:void 0,theme:"dark",transition:a})};return s.jsx("div",{className:i.buy__wrapper,children:s.jsxs("div",{className:i.buy__container,children:[s.jsxs("div",{className:i.buy__title_and_logo,children:[s.jsx(ie,{fontSize:"42px"}),s.jsx("span",{className:i.buy__title,children:s.jsx(ce,{className:i.buy__heading,level:"h1",children:"Spin&Earn"})})]}),s.jsx(p,{fontSize:"16px",fontFamily:"Montserrat, sans-serif",children:"Buy bonus spins with WHISK"}),s.jsx("div",{className:i.buy__buy_rows,children:Y&&Y.map(c=>s.jsx(Me,{id:c.id,countSpin:c.countSpins,countWhisk:c.countWhisks,userId:e==null?void 0:e.userId,userTonAddress:e==null?void 0:e.userTonAddress,jettonBalance:_},c.id))}),s.jsxs("div",{className:i.buy__balance,children:[s.jsxs("div",{onClick:H,className:i.buy__back,children:[s.jsx("img",{src:Re,className:i.buy__back_icon,alt:"back to main screen"}),s.jsx(p,{children:"Back"})]}),s.jsxs("div",{className:i.buy__balance_value,children:[s.jsx(p,{fontSize:"14px",fontFamily:"Montserrat, sans-serif",children:"Wallet balance"}),s.jsxs(p,{fontSize:"16px",fontFamily:"Montserrat, sans-serif",children:[_.toLocaleString()," WHISK"]})]})]}),s.jsx("div",{className:i.buy__footer_connect,children:s.jsxs("div",{className:i.buy__footer_connect_container,children:[s.jsxs("div",{className:i.buy__footer_connect_score,children:[s.jsx(p,{fontSize:t?"18px":"40px",children:"Unclaimed WHISK"}),s.jsxs("div",{className:i.buy__footer_connect_tokens,children:[s.jsx(p,{fontSize:t?"30px":"50px",fontFamily:"Roundy Rainbows, sans-serif",children:((e==null?void 0:e.points)||0)-((e==null?void 0:e.claimedWhisks)||0)}),s.jsx(Z,{onClick:P,fontFamily:"Montserrat, sans-serif",height:t?"24px":"42px",fontSize:t?"16px":"40px",backgroundImage:N?"linear-gradient(rgb(32 167 228), rgb(0, 128, 187))":"linear-gradient(#C0C0C0, #808080)",text:"Claim tokens",fontWeight:"normal",width:"fit-content",textTransform:"none",borderRadius:"24px"})]})]}),s.jsx("div",{className:i.buy__footer_connect_wallet,children:s.jsx(ue,{})})]})})]})})},Ye=()=>s.jsx(Ue,{});export{Ye as default};
